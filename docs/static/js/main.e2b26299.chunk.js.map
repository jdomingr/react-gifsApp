{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBhD,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,OAQd,2BAAOO,KAAK,OAAOC,MAAQT,EAAaU,SAjBtB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,YCNnBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,yBAAKC,UAAU,0CACZ,yBAAKC,IAAKF,EAAKG,IAAKJ,IACnB,+BAAMA,K,uBCNLK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZY,GAbY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAexC,OARAC,qBAAW,WACPjB,EAASC,GAAWiB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACvCT,KAAMY,EACNL,SAAS,SAEd,CAAEb,IAGEc,EDZ0BK,CAAcnB,GAAjCU,EAFuB,EAE7BJ,KAAcO,EAFe,EAEfA,QAsBtB,OACI,oCACI,wBAAIjB,UAAU,qCAAsCI,GAElDa,GAAW,uBAAGjB,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAEXc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eAAaW,IAAKX,EAAIhB,IAASgB,UEhCtCY,EAAe,WAAM,MAIM1C,mBAAS,CAAC,gBAJhB,mBAIvBQ,EAJuB,KAIXT,EAJW,KAa9B,OACI,oCACG,4CAEC,kBAAC,EAAD,CAAaA,cAAkBA,IAEhC,6BAGA,4BAEQS,EAAWqB,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CAASoB,IAAKpB,EAAUA,SAAUA,UCvBzDsB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.e2b26299.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( categories => [ inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input type=\"text\" value={ inputValue } onChange = { handleInputChange } />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url} alt={title} />\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Zz7rPDaFxDxFCrYMyght8ht9I20YnXOO`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data: images, loading} = useFetchGifs( category );\r\n    \r\n    // const getGifs = async() => {\r\n    //     const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Zz7rPDaFxDxFCrYMyght8ht9I20YnXOO`;\r\n    //     const resp = await fetch(url);\r\n    //     const { data } = await resp.json();\r\n\r\n    //     const gifs = data.map( img => {\r\n    //         return {\r\n    //             id: img.id,\r\n    //             title: img.title,\r\n    //             url: img.images?.downsized_medium.url\r\n    //         }\r\n    //     })\r\n\r\n    //     console.log(gifs)\r\n    //     setImages(gifs);\r\n\r\n    // }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">   \r\n                {\r\n                images.map( img =>\r\n                    <GifGridItem key={img.id} { ...img } />)\r\n                }      \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category ).then( imgs => setState({\r\n            data: imgs,\r\n            loading: false\r\n        }));\r\n    }, [ category ]);\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragom Ball'];\r\n    //Los set pueden recibir un callback con el estado anterior\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     //setCategories( ['One Piece', ...categories] ); inicio\r\n    //     //setCategories( [...categories, 'One Piece'] ); final\r\n    //     setCategories( (cats) => [...categories, 'One Piece'] );\r\n    // }\r\n\r\n    return (\r\n        <>  \r\n           <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories = { setCategories } />\r\n\r\n           <hr /> \r\n            \r\n            \r\n           <ol>\r\n               {\r\n                   categories.map( category => (\r\n                       <GifGrid key={category} category={category} />\r\n                    ))\r\n               }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}